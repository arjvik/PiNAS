version: "3.9"

services:
  traefik:
    image: traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  sftpgo:
    image: drakkan/sftpgo:v2-alpine-slim
    command: sh -c "sed -Ee 's/^(\\w*)=(.*)$$/s#\\\\$$\\1#\\2#g/' /srv/sftpgo-secrets.env | sed -f- /srv/sftpgo-template.json > /tmp/sftpgo.json && exec sftpgo serve"
    restart: on-failure
    environment:
      - SFTPGO_SFTPD__HOST_KEYS=/srv/id_ed25519
      - SFTPGO_WEBDAVD__BINDINGS__0__PORT=8000
      - SFTPGO_WEBDAVD__BINDINGS__0__PREFIX=/dav
      - SFTPGO_HTTPD__WEB_ROOT=/sftpgo
      - SFTPGO_DATA_PROVIDER__DRIVER=memory
      - SFTPGO_LOADDATA_FROM=/tmp/sftpgo.json
    ports:
      - 2222:2022
    volumes:
      - /mnt/NAS1/@data/share:/srv/share
      - /mnt/NAS1/@data/config/sftpgo/id_ed25519:/srv/id_ed25519:ro
      - ./sftpgo/sftpgo-backup.json:/srv/sftpgo-template.json:ro
      - ./sftpgo/sftpgo-secrets.env:/srv/sftpgo-secrets.env:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sftpgoweb.rule=PathPrefix(`/sftpgo`)"
      - "traefik.http.services.sftpgoweb.loadbalancer.server.port=8080"
      - "traefik.http.routers.sftpgoweb.service=sftpgoweb"
      - "traefik.http.routers.sftpgodav.rule=PathPrefix(`/dav`)"
      - "traefik.http.services.sftpgodav.loadbalancer.server.port=8000"
      - "traefik.http.routers.sftpgodav.service=sftpgodav"
  samba:
    build: ./samba
    restart: on-failure
    ports:
      - 445:445
    volumes:
      - /mnt/NAS1/@data/share/files/shared/scans:/mnt/scans
      - ./samba/smb.conf:/etc/samba/smb.conf:ro
  iperf3:
    build: ./iperf3
    restart: on-failure
    ports:
      - 5201:5201
  ipcamera-mjpeg1: &ipcamera
    build: ./ipcamera
    restart: on-failure
    env_file:
      - ./ipcamera/camera-secrets.env
    environment:
      - CAMERA_IP=192.168.1.131
  ipcamera-mjpeg2:
    <<: *ipcamera
    environment:
      - CAMERA_IP=192.168.1.132
  ipcamera-mjpeg3:
    <<: *ipcamera
    environment:
      - CAMERA_IP=192.168.1.127
  ipcamera-nginx:
    image: nginx:alpine
    restart: on-failure
    ports:
      - 9000:9000
    volumes:
      - ./ipcamera/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ipcamera/www/:/var/www/:ro
    depends_on: [ipcamera-mjpeg1, ipcamera-mjpeg2]
